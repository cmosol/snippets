{
	"Three.js Boiler-plate": {
		"prefix": "threejs",
		"body": [
			"import './style.css';",
			"import * as THREE from 'three';",
			"import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';",
			"",
			"//set up scene, camera, and renderer",
			"const scene = new THREE.Scene();",
			"const camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );",
			"const renderer = new THREE.WebGLRenderer({",
			"canvas: document.querySelector('#bg')",
			"});",
			"renderer.setPixelRatio( window.devicePixelRatio );",
			"renderer.setSize( window.innerWidth, window.innerHeight );",
			"camera.position.setZ(30);",
			"",
			"renderer.render( scene, camera );",
			"",
			"//adding basic scene lighting",
			"const pointLight = new THREE.PointLight(0xffffff);",
			"pointLight.position.set( 5,5,5 );",
			"",
			"const ambientLight = new THREE.AmbientLight(0xffffff);",
			"",
			"scene.add(pointLight, ambientLight);",
			"",
			"//orbit controls",
			"const controls = new OrbitControls(camera, renderer.domElement);",
			"",
			"//camera zoom on scroll",
			"function moveCamera() {",
			"const t = document.body.getBoundingClientRect().top;",
			"",
			"camera.position.z = t * -0.01;",
			"camera.position.x = t * -0.0002;",
			"camera.rotation.y = t * -0.0002;",
			"}",
			"",
			"document.body.onscroll = moveCamera;",
			"moveCamera();",
			"",
			"// animation loop",
			"function animate() {",
			"requestAnimationFrame( animate );",
			"",
			"controls.update();",
			"",
			"renderer.render( scene, camera );",
			"}",
			"",
			"animate();"
			],
			"description": "basic three.js javascript boiler-plate template"
	}
}